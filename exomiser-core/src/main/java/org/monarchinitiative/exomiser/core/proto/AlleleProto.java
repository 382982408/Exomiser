/*
 * The Exomiser - A tool to annotate and prioritize genomic variants
 *
 * Copyright (c) 2016-2017 Queen Mary University of London.
 * Copyright (c) 2012-2016 Charité Universitätsmedizin Berlin and Genome Research Ltd.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: allele.proto

package org.monarchinitiative.exomiser.core.proto;

public final class AlleleProto {
    private AlleleProto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface AlleleKeyOrBuilder extends
            // @@protoc_insertion_point(interface_extends:AlleleKey)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int32 chr = 1;</code>
         */
        int getChr();

        /**
         * <code>int32 position = 2;</code>
         */
        int getPosition();

        /**
         * <code>string ref = 3;</code>
         */
        java.lang.String getRef();

        /**
         * <code>string ref = 3;</code>
         */
        com.google.protobuf.ByteString
        getRefBytes();

        /**
         * <code>string alt = 4;</code>
         */
        java.lang.String getAlt();

        /**
         * <code>string alt = 4;</code>
         */
        com.google.protobuf.ByteString
        getAltBytes();
    }

    /**
     * Protobuf type {@code AlleleKey}
     */
    public static final class AlleleKey extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:AlleleKey)
            AlleleKeyOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use AlleleKey.newBuilder() to construct.
        private AlleleKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private AlleleKey() {
            chr_ = 0;
            position_ = 0;
            ref_ = "";
            alt_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private AlleleKey(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            chr_ = input.readInt32();
                            break;
                        }
                        case 16: {

                            position_ = input.readInt32();
                            break;
                        }
                        case 26: {
                            java.lang.String s = input.readStringRequireUtf8();

                            ref_ = s;
                            break;
                        }
                        case 34: {
                            java.lang.String s = input.readStringRequireUtf8();

                            alt_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleKey_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleKey_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.class, org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.Builder.class);
        }

        public static final int CHR_FIELD_NUMBER = 1;
        private int chr_;

        /**
         * <code>int32 chr = 1;</code>
         */
        public int getChr() {
            return chr_;
        }

        public static final int POSITION_FIELD_NUMBER = 2;
        private int position_;

        /**
         * <code>int32 position = 2;</code>
         */
        public int getPosition() {
            return position_;
        }

        public static final int REF_FIELD_NUMBER = 3;
        private volatile java.lang.Object ref_;

        /**
         * <code>string ref = 3;</code>
         */
        public java.lang.String getRef() {
            java.lang.Object ref = ref_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                ref_ = s;
                return s;
            }
        }

        /**
         * <code>string ref = 3;</code>
         */
        public com.google.protobuf.ByteString
        getRefBytes() {
            java.lang.Object ref = ref_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                ref_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ALT_FIELD_NUMBER = 4;
        private volatile java.lang.Object alt_;

        /**
         * <code>string alt = 4;</code>
         */
        public java.lang.String getAlt() {
            java.lang.Object ref = alt_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                alt_ = s;
                return s;
            }
        }

        /**
         * <code>string alt = 4;</code>
         */
        public com.google.protobuf.ByteString
        getAltBytes() {
            java.lang.Object ref = alt_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                alt_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (chr_ != 0) {
                output.writeInt32(1, chr_);
            }
            if (position_ != 0) {
                output.writeInt32(2, position_);
            }
            if (!getRefBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ref_);
            }
            if (!getAltBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, alt_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (chr_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, chr_);
            }
            if (position_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, position_);
            }
            if (!getRefBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ref_);
            }
            if (!getAltBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, alt_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey)) {
                return super.equals(obj);
            }
            org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey other = (org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey) obj;

            boolean result = true;
            result = result && (getChr()
                    == other.getChr());
            result = result && (getPosition()
                    == other.getPosition());
            result = result && getRef()
                    .equals(other.getRef());
            result = result && getAlt()
                    .equals(other.getAlt());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + CHR_FIELD_NUMBER;
            hash = (53 * hash) + getChr();
            hash = (37 * hash) + POSITION_FIELD_NUMBER;
            hash = (53 * hash) + getPosition();
            hash = (37 * hash) + REF_FIELD_NUMBER;
            hash = (53 * hash) + getRef().hashCode();
            hash = (37 * hash) + ALT_FIELD_NUMBER;
            hash = (53 * hash) + getAlt().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code AlleleKey}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:AlleleKey)
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKeyOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleKey_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleKey_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.class, org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.Builder.class);
            }

            // Construct using org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                chr_ = 0;

                position_ = 0;

                ref_ = "";

                alt_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleKey_descriptor;
            }

            public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey getDefaultInstanceForType() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.getDefaultInstance();
            }

            public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey build() {
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey buildPartial() {
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey result = new org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey(this);
                result.chr_ = chr_;
                result.position_ = position_;
                result.ref_ = ref_;
                result.alt_ = alt_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey) {
                    return mergeFrom((org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey other) {
                if (other == org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey.getDefaultInstance())
                    return this;
                if (other.getChr() != 0) {
                    setChr(other.getChr());
                }
                if (other.getPosition() != 0) {
                    setPosition(other.getPosition());
                }
                if (!other.getRef().isEmpty()) {
                    ref_ = other.ref_;
                    onChanged();
                }
                if (!other.getAlt().isEmpty()) {
                    alt_ = other.alt_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int chr_;

            /**
             * <code>int32 chr = 1;</code>
             */
            public int getChr() {
                return chr_;
            }

            /**
             * <code>int32 chr = 1;</code>
             */
            public Builder setChr(int value) {

                chr_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 chr = 1;</code>
             */
            public Builder clearChr() {

                chr_ = 0;
                onChanged();
                return this;
            }

            private int position_;

            /**
             * <code>int32 position = 2;</code>
             */
            public int getPosition() {
                return position_;
            }

            /**
             * <code>int32 position = 2;</code>
             */
            public Builder setPosition(int value) {

                position_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 position = 2;</code>
             */
            public Builder clearPosition() {

                position_ = 0;
                onChanged();
                return this;
            }

            private java.lang.Object ref_ = "";

            /**
             * <code>string ref = 3;</code>
             */
            public java.lang.String getRef() {
                java.lang.Object ref = ref_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    ref_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string ref = 3;</code>
             */
            public com.google.protobuf.ByteString
            getRefBytes() {
                java.lang.Object ref = ref_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    ref_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string ref = 3;</code>
             */
            public Builder setRef(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                ref_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ref = 3;</code>
             */
            public Builder clearRef() {

                ref_ = getDefaultInstance().getRef();
                onChanged();
                return this;
            }

            /**
             * <code>string ref = 3;</code>
             */
            public Builder setRefBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                ref_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object alt_ = "";

            /**
             * <code>string alt = 4;</code>
             */
            public java.lang.String getAlt() {
                java.lang.Object ref = alt_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    alt_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string alt = 4;</code>
             */
            public com.google.protobuf.ByteString
            getAltBytes() {
                java.lang.Object ref = alt_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    alt_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string alt = 4;</code>
             */
            public Builder setAlt(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                alt_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string alt = 4;</code>
             */
            public Builder clearAlt() {

                alt_ = getDefaultInstance().getAlt();
                onChanged();
                return this;
            }

            /**
             * <code>string alt = 4;</code>
             */
            public Builder setAltBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                alt_ = value;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:AlleleKey)
        }

        // @@protoc_insertion_point(class_scope:AlleleKey)
        private static final org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey();
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AlleleKey>
                PARSER = new com.google.protobuf.AbstractParser<AlleleKey>() {
            public AlleleKey parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new AlleleKey(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<AlleleKey> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AlleleKey> getParserForType() {
            return PARSER;
        }

        public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleKey getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface AllelePropertiesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:AlleleProperties)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>string rs_id = 1;</code>
         */
        java.lang.String getRsId();

        /**
         * <code>string rs_id = 1;</code>
         */
        com.google.protobuf.ByteString
        getRsIdBytes();

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */
        int getPropertiesCount();

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */
        boolean containsProperties(
                java.lang.String key);

        /**
         * Use {@link #getPropertiesMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.Float>
        getProperties();

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */
        java.util.Map<java.lang.String, java.lang.Float>
        getPropertiesMap();

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */

        float getPropertiesOrDefault(
                java.lang.String key,
                float defaultValue);

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */

        float getPropertiesOrThrow(
                java.lang.String key);
    }

    /**
     * Protobuf type {@code AlleleProperties}
     */
    public static final class AlleleProperties extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:AlleleProperties)
            AllelePropertiesOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use AlleleProperties.newBuilder() to construct.
        private AlleleProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private AlleleProperties() {
            rsId_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private AlleleProperties(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            rsId_ = s;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                properties_ = com.google.protobuf.MapField.newMapField(
                                        PropertiesDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000002;
                            }
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
                                    properties__ = input.readMessage(
                                    PropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            properties_.getMutableMap().put(
                                    properties__.getKey(), properties__.getValue());
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleProperties_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 2:
                    return internalGetProperties();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleProperties_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.class, org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.Builder.class);
        }

        private int bitField0_;
        public static final int RS_ID_FIELD_NUMBER = 1;
        private volatile java.lang.Object rsId_;

        /**
         * <code>string rs_id = 1;</code>
         */
        public java.lang.String getRsId() {
            java.lang.Object ref = rsId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                rsId_ = s;
                return s;
            }
        }

        /**
         * <code>string rs_id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getRsIdBytes() {
            java.lang.Object ref = rsId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                rsId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PROPERTIES_FIELD_NUMBER = 2;

        private static final class PropertiesDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    java.lang.String, java.lang.Float> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<java.lang.String, java.lang.Float>newDefaultInstance(
                                    org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleProperties_PropertiesEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.FLOAT,
                                    0F);
        }

        private com.google.protobuf.MapField<
                java.lang.String, java.lang.Float> properties_;

        private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
        internalGetProperties() {
            if (properties_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        PropertiesDefaultEntryHolder.defaultEntry);
            }
            return properties_;
        }

        public int getPropertiesCount() {
            return internalGetProperties().getMap().size();
        }

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */

        public boolean containsProperties(
                java.lang.String key) {
            if (key == null) {
                throw new java.lang.NullPointerException();
            }
            return internalGetProperties().getMap().containsKey(key);
        }

        /**
         * Use {@link #getPropertiesMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Float> getProperties() {
            return getPropertiesMap();
        }

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Float> getPropertiesMap() {
            return internalGetProperties().getMap();
        }

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */

        public float getPropertiesOrDefault(
                java.lang.String key,
                float defaultValue) {
            if (key == null) {
                throw new java.lang.NullPointerException();
            }
            java.util.Map<java.lang.String, java.lang.Float> map =
                    internalGetProperties().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <code>map&lt;string, float&gt; properties = 2;</code>
         */

        public float getPropertiesOrThrow(
                java.lang.String key) {
            if (key == null) {
                throw new java.lang.NullPointerException();
            }
            java.util.Map<java.lang.String, java.lang.Float> map =
                    internalGetProperties().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getRsIdBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rsId_);
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetProperties(),
                            PropertiesDefaultEntryHolder.defaultEntry,
                            2);
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getRsIdBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rsId_);
            }
            for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
                    : internalGetProperties().getMap().entrySet()) {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
                        properties__ = PropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, properties__);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties)) {
                return super.equals(obj);
            }
            org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties other = (org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties) obj;

            boolean result = true;
            result = result && getRsId()
                    .equals(other.getRsId());
            result = result && internalGetProperties().equals(
                    other.internalGetProperties());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + RS_ID_FIELD_NUMBER;
            hash = (53 * hash) + getRsId().hashCode();
            if (!internalGetProperties().getMap().isEmpty()) {
                hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
                hash = (53 * hash) + internalGetProperties().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code AlleleProperties}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:AlleleProperties)
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AllelePropertiesOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleProperties_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 2:
                        return internalGetProperties();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 2:
                        return internalGetMutableProperties();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleProperties_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.class, org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.Builder.class);
            }

            // Construct using org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                rsId_ = "";

                internalGetMutableProperties().clear();
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.internal_static_AlleleProperties_descriptor;
            }

            public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties getDefaultInstanceForType() {
                return org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.getDefaultInstance();
            }

            public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties build() {
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties buildPartial() {
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties result = new org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.rsId_ = rsId_;
                result.properties_ = internalGetProperties();
                result.properties_.makeImmutable();
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties) {
                    return mergeFrom((org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties other) {
                if (other == org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties.getDefaultInstance())
                    return this;
                if (!other.getRsId().isEmpty()) {
                    rsId_ = other.rsId_;
                    onChanged();
                }
                internalGetMutableProperties().mergeFrom(
                        other.internalGetProperties());
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.lang.Object rsId_ = "";

            /**
             * <code>string rs_id = 1;</code>
             */
            public java.lang.String getRsId() {
                java.lang.Object ref = rsId_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    rsId_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string rs_id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getRsIdBytes() {
                java.lang.Object ref = rsId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    rsId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string rs_id = 1;</code>
             */
            public Builder setRsId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                rsId_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string rs_id = 1;</code>
             */
            public Builder clearRsId() {

                rsId_ = getDefaultInstance().getRsId();
                onChanged();
                return this;
            }

            /**
             * <code>string rs_id = 1;</code>
             */
            public Builder setRsIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                rsId_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<
                    java.lang.String, java.lang.Float> properties_;

            private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
            internalGetProperties() {
                if (properties_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            PropertiesDefaultEntryHolder.defaultEntry);
                }
                return properties_;
            }

            private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
            internalGetMutableProperties() {
                onChanged();
                ;
                if (properties_ == null) {
                    properties_ = com.google.protobuf.MapField.newMapField(
                            PropertiesDefaultEntryHolder.defaultEntry);
                }
                if (!properties_.isMutable()) {
                    properties_ = properties_.copy();
                }
                return properties_;
            }

            public int getPropertiesCount() {
                return internalGetProperties().getMap().size();
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */

            public boolean containsProperties(
                    java.lang.String key) {
                if (key == null) {
                    throw new java.lang.NullPointerException();
                }
                return internalGetProperties().getMap().containsKey(key);
            }

            /**
             * Use {@link #getPropertiesMap()} instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Float> getProperties() {
                return getPropertiesMap();
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */

            public java.util.Map<java.lang.String, java.lang.Float> getPropertiesMap() {
                return internalGetProperties().getMap();
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */

            public float getPropertiesOrDefault(
                    java.lang.String key,
                    float defaultValue) {
                if (key == null) {
                    throw new java.lang.NullPointerException();
                }
                java.util.Map<java.lang.String, java.lang.Float> map =
                        internalGetProperties().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */

            public float getPropertiesOrThrow(
                    java.lang.String key) {
                if (key == null) {
                    throw new java.lang.NullPointerException();
                }
                java.util.Map<java.lang.String, java.lang.Float> map =
                        internalGetProperties().getMap();
                if (!map.containsKey(key)) {
                    throw new java.lang.IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearProperties() {
                internalGetMutableProperties().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */

            public Builder removeProperties(
                    java.lang.String key) {
                if (key == null) {
                    throw new java.lang.NullPointerException();
                }
                internalGetMutableProperties().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Float>
            getMutableProperties() {
                return internalGetMutableProperties().getMutableMap();
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */
            public Builder putProperties(
                    java.lang.String key,
                    float value) {
                if (key == null) {
                    throw new java.lang.NullPointerException();
                }

                internalGetMutableProperties().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <code>map&lt;string, float&gt; properties = 2;</code>
             */

            public Builder putAllProperties(
                    java.util.Map<java.lang.String, java.lang.Float> values) {
                internalGetMutableProperties().getMutableMap()
                        .putAll(values);
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:AlleleProperties)
        }

        // @@protoc_insertion_point(class_scope:AlleleProperties)
        private static final org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties();
        }

        public static org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AlleleProperties>
                PARSER = new com.google.protobuf.AbstractParser<AlleleProperties>() {
            public AlleleProperties parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new AlleleProperties(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<AlleleProperties> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AlleleProperties> getParserForType() {
            return PARSER;
        }

        public org.monarchinitiative.exomiser.core.proto.AlleleProto.AlleleProperties getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_AlleleKey_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_AlleleKey_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_AlleleProperties_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_AlleleProperties_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_AlleleProperties_PropertiesEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_AlleleProperties_PropertiesEntry_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\014allele.proto\"D\n\tAlleleKey\022\013\n\003chr\030\001 \001(\005" +
                        "\022\020\n\010position\030\002 \001(\005\022\013\n\003ref\030\003 \001(\t\022\013\n\003alt\030\004" +
                        " \001(\t\"\213\001\n\020AlleleProperties\022\r\n\005rs_id\030\001 \001(\t" +
                        "\0225\n\nproperties\030\002 \003(\0132!.AlleleProperties." +
                        "PropertiesEntry\0321\n\017PropertiesEntry\022\013\n\003ke" +
                        "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001B8\n)org.monarc" +
                        "hinitiative.exomiser.core.protoB\013AlleleP" +
                        "rotob\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_AlleleKey_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_AlleleKey_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_AlleleKey_descriptor,
                new java.lang.String[]{"Chr", "Position", "Ref", "Alt",});
        internal_static_AlleleProperties_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_AlleleProperties_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_AlleleProperties_descriptor,
                new java.lang.String[]{"RsId", "Properties",});
        internal_static_AlleleProperties_PropertiesEntry_descriptor =
                internal_static_AlleleProperties_descriptor.getNestedTypes().get(0);
        internal_static_AlleleProperties_PropertiesEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_AlleleProperties_PropertiesEntry_descriptor,
                new java.lang.String[]{"Key", "Value",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
