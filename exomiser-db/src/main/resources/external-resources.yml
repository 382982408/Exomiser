## YAML Template.
---
# external resources required for loading into the exomiser database
# supported extractionSchemes are 'zip', 'gz', 'tgz', 'copy' and 'none' these tell the 
# ResourceExtractionHandler what to do with the file.
# -extractedFileName tells the FileExtractionHandler what the final resource 
# filename should be.
# -parserGroup will bundle all resources with the same parserGroup to be handled
# by the ResourceParserHandler together. Resources can still have a different parser
# specified.
# -parsedFileName is the name of the output file from the parser. Don't change 
# this without changing the relevant name in the db.migration packages otherwise
# the migrations will fail.
External resources:
#      - !resource
#        name: EXAMPLE
#        url: http://solr-slave-sanger.sanger.ac.uk/solr451/phenodigm/select?q=%22OMIM%3A101600%22&fq=type%3A%22disease%22&wt=xml
#        remoteFileName: test.zip
#        version:
#        extractedFileName: test
#        extractionScheme: zip
#        parser: de.charite.compbio.exomiser.parsers.HPOOntologyFileParser #requires fully-qualified name
#        parserGroup: test
#        parsedFileName: test.pg

#      - !resource
#        name: HPO
#        url: http://compbio.charite.de/hudson/job/hpo/lastStableBuild/artifact/ontology/release/
#        remoteFileName: hp.obo
#        version: 
#        extractedFileName: hpo.obo
#        extractionScheme: copy
#        parser: de.charite.compbio.exomiser.parsers.HPOOntologyFileParser
#        parserGroup: hpo
#        parsedFileName: hpo.pg

#      - !resource
#        name: dbNSFP # this is a 4.4GB file so might take a while
#        url: http://dbnsfp.houstonbioinformatics.org/dbNSFPzip/
#        remoteFileName: dbNSFPv2.3.zip #it is also about 25GB when uncompresssed
#        version: 2.3  #so fear it
#        extractedFileName: dbNSFPv2.3.zip
#        extractionScheme: copy
#        parser: de.charite.compbio.exomiser.parsers.NSFP2SQLDumpParser
#        parserGroup: variant
#        parsedFileName: variant.pg
#    
#      - !resource
#        name: dbSNP
#        url: ftp://ftp.ncbi.nlm.nih.gov/snp/organisms/human_9606/VCF/
#        remoteFileName: 00-All.vcf.gz
#        version: 00
#        extractedFileName: dbSNP_00-All.vcf
#        extractionScheme: copy #can also do a gz 
#        parser: de.charite.compbio.exomiser.parsers.DbSnpFrequencyParser
#        parserGroup: frequency
#        parsedFileName: #doesn't actually output a file
#        
#      - !resource
#        name: ESP
#        url: http://evs.gs.washington.edu/evs_bulk_data/
#        remoteFileName: ESP6500SI-V2-SSA137.protein-hgvs-update.snps_indels.vcf.tar.gz
#        version: 2
#        extractedFileName: ESP_snps_indels
#        extractionScheme: tgz
#        parser: de.charite.compbio.exomiser.parsers.EspFrequencyParser
#        parserGroup: frequency
#        parsedFileName: frequency.pg
#
#      - !resource
#        name: UCSC_HG19
#        url: #this file is contained in the resources package as it needs to be made manually with Jannovar
#        remoteFileName: ucsc_hg19.ser.gz
#        version: 2
#        extractedFileName: ucsc_hg19.ser
#        extractionScheme: gz
#        parser: 
#        parserGroup: frequency
#        parsedFileName: 
#        
      - !resource
        name: OMIM_mim2gene
        url: ftp://anonymous:jj8%40sanger.ac.uk@ftp.omim.org/OMIM/
#        url: ftp://ftp.omim.org/OMIM/
        remoteFileName: mim2gene.txt
        version: 2
        extractedFileName: OMIM_mim2gene.txt
        extractionScheme: copy
        parser: de.charite.compbio.exomiser.parsers.MimToGeneParser
        parserGroup: omim
        parsedFileName: #doesn't actually output a file

      - !resource
        name: OMIM_morbidmap
        url: ftp://anonymous:jj8%40sanger.ac.uk@ftp.omim.org/OMIM/
#        url: ftp://ftp.omim.org/OMIM/
        remoteFileName: morbidmap
        version: 2
        extractedFileName: OMIM_morbidmap.txt
        extractionScheme: copy
        parser: de.charite.compbio.exomiser.parsers.MorbidMapParser
        parserGroup: omim
        parsedFileName: omim.pg
        
      - !resource
        name: HPO_phenotype_annotations
        url: http://compbio.charite.de/hudson/job/hpo.annotations/lastStableBuild/artifact/misc/
        remoteFileName: phenotype_annotation.tab
        version: 
        extractedFileName: phenotype_annotation.tab
        extractionScheme: copy
        parser: de.charite.compbio.exomiser.parsers.MorbidMapParser
        parserGroup: omim
        parsedFileName: omim.pg   
            
#      - !resource
#        name: ExomeWalker_phenotypic_series
#        url: #this file is contained in the resources package
#        remoteFileName: pheno2gene.txt
#        version: 
#        extractedFileName: pheno2gene.txt
#        extractionScheme: copy
#        parser: de.charite.compbio.exomiser.parsers.PhenoSeriesParser
#        parserGroup: exomeWalker
#        parsedFileName: phenoseries.pg     
#    #pheno2gene.txt is produced from a custom data-dump from OMIM which is then post-processed
#    #with some perl scripts using data from the mim2gene_medgen and gene_info files from NCBI
#    #(ftp://ftp.ncbi.nlm.nih.gov/gene/DATA) consequently this is treated as static data.
#      - !resource
#        name: ExomeWalker_omim2gene
#        url: #this file is contained in the resources package
#        remoteFileName: pheno2gene.txt
#        version: 
#        extractedFileName: pheno2gene.txt
#        extractionScheme: copy
#        parser: de.charite.compbio.exomiser.parsers.Omim2GeneParser
#        parserGroup: exomeWalker
#        parsedFileName: omim2gene.pg     
#
#      - !resource
#        name: ORPHANET
#        url: 
#        remoteFileName: 
#        version: 
#        extractedFileName: 
#        extractionScheme: copy
#        parser: de.charite.compbio.exomiser.parsers.OrphaParser
#        parserGroup: orphanet
#        parsedFileName:
#    
#      - !resource
#        name: ClinVar
#        url: ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar/tab_delimited/
#        remoteFileName: variant_summary.txt.gz
#        version: Feb 13 20:10
#        extractedFileName: ClinVar_variant_summary.txt
#        extractionScheme: gz
#        parser: de.charite.compbio.exomiser.parsers.ClinVarParser
#        parserGroup: clinvar
#        parsedFileName: clinvar.pg

################################################################################
#### These next ones are only required for creating the ucsc_hg19.ser file with 
#### jannovar in order that the dbSnpParser can filter the variants within known
#### gene coding-regions
#
#      - !resource
#        name: UCSC_knownGene
#        url: ftp://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/
#        remoteFileName: knownGene.txt.gz
#        version:
#        extractedFileName: UCSC_knownGene.txt
#        extractionScheme: gz
#        parser:
#            
#      - !resource
#        name: UCSC_kgXref
#        url: ftp://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/
#        remoteFileName: kgXref.txt.gz
#        version:
#        extractedFileName: UCSC_kgXref.txt
#        extractionScheme: gz
#        parser:
#
#      - !resource
#        name: UCSC_knownGeneMrna
#        url: ftp://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/
#        remoteFileName: knownGeneMrna.txt.gz
#        version:
#        extractedFileName: UCSC_knownGeneMrna.txt
#        extractionScheme: gz
#        parser:
#           
#      - !resource            
#        name: UCSC_knownToLocusLink
#        url: ftp://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/
#        remoteFileName: knownToLocusLink.txt.gz
#        version:
#        extractedFileName: UCSC_knownToLocusLink.txt
#        extractionScheme: gz
#        parser:
#
